// Generated from D:/Files/Facultate/CPL/teme-main/tema2/Tema2/src/cool/parser/CoolLexer.g4 by ANTLR 4.13.2

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, INT=2, CLASS=3, ELSE=4, FI=5, IF=6, IN=7, INHERITS=8, ISVOID=9, 
		LET=10, LOOP=11, POOL=12, THEN=13, WHILE=14, CASE=15, ESAC=16, NEW=17, 
		OF=18, NOT=19, CASE_ASSIGN=20, ASSIGN=21, LE=22, LT=23, EQ=24, PLUS=25, 
		MINUS=26, MULT=27, DIV=28, NEG=29, AT=30, DOT=31, LPAREN=32, RPAREN=33, 
		LBRACE=34, RBRACE=35, COLON=36, SEMICOLON=37, COMMA=38, FALSE=39, TRUE=40, 
		TYPE_ID=41, ID=42, OBJ_ID=43, STRING=44, BLOCK_COMMENT=45, BLOCK_COMMENT_RIGHT_SIDE=46, 
		LINE_COMMENT=47, WS=48, INVALID_CHAR=49;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DIGIT", "INT", "LETTER", "CAPITAL_LETTER", "LOW_LETTER", "CLASS", "ELSE", 
			"FI", "IF", "IN", "INHERITS", "ISVOID", "LET", "LOOP", "POOL", "THEN", 
			"WHILE", "CASE", "ESAC", "NEW", "OF", "NOT", "CASE_ASSIGN", "ASSIGN", 
			"LE", "LT", "EQ", "PLUS", "MINUS", "MULT", "DIV", "NEG", "AT", "DOT", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "COLON", "SEMICOLON", "COMMA", 
			"FALSE", "TRUE", "TYPE_ID", "ID", "OBJ_ID", "STRING", "NEW_LINE", "BLOCK_COMMENT", 
			"BLOCK_COMMENT_RIGHT_SIDE", "LINE_COMMENT", "WS", "INVALID_CHAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'class'", "'else'", "'fi'", "'if'", "'in'", "'inherits'", 
			"'isvoid'", "'let'", "'loop'", "'pool'", "'then'", "'while'", "'case'", 
			"'esac'", "'new'", "'of'", "'not'", "'=>'", "'<-'", "'<='", "'<'", "'='", 
			"'+'", "'-'", "'*'", "'/'", "'~'", "'@'", "'.'", "'('", "')'", "'{'", 
			"'}'", "':'", "';'", "','", null, null, null, null, null, null, null, 
			"'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "INT", "CLASS", "ELSE", "FI", "IF", "IN", "INHERITS", 
			"ISVOID", "LET", "LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", 
			"OF", "NOT", "CASE_ASSIGN", "ASSIGN", "LE", "LT", "EQ", "PLUS", "MINUS", 
			"MULT", "DIV", "NEG", "AT", "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
			"COLON", "SEMICOLON", "COMMA", "FALSE", "TRUE", "TYPE_ID", "ID", "OBJ_ID", 
			"STRING", "BLOCK_COMMENT", "BLOCK_COMMENT_RIGHT_SIDE", "LINE_COMMENT", 
			"WS", "INVALID_CHAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 46:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 48:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 49:
			BLOCK_COMMENT_RIGHT_SIDE_action((RuleContext)_localctx, actionIndex);
			break;
		case 52:
			INVALID_CHAR_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			raiseError("String contains null character"); 
			break;
		case 1:

			            String text = getText();
			            if(text.equals("String contains null character")
			                        || text.equals("Unterminated string constant"))
			                return;
			            text = text.substring(1, getText().length() - 1);

			            text = text.replace("\\n", "\n");
			            text = text.replace("\\t", "\t");
			            text = text.replace("\\b", "\b");
			            text = text.replace("\\f", "\f");

			            text = text.replaceAll("\\\\\\\\", "__TEMP_BACKSLASH__");
			            text = text.replaceAll("\\\\", "");
			            text = text.replaceAll("__TEMP_BACKSLASH__", "\\\\");

			            setText(text);

			            if(text.length() >= 1024)
			                raiseError("String constant too long");
			        
			break;
		case 2:
			raiseError ("Unterminated string constant");
			break;
		case 3:
			raiseError("EOF in string constant");
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			skip();
			break;
		case 5:
			 raiseError("EOF in comment"); 
			break;
		}
	}
	private void BLOCK_COMMENT_RIGHT_SIDE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 6:
			 raiseError("Unmatched *)"); 
			break;
		}
	}
	private void INVALID_CHAR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 7:

			        raiseError("Invalid character: " + getText());
			    
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00001\u016f\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0004\u0001o\b\u0001\u000b\u0001\f\u0001p\u0001"+
		"\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001"+
		"\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001"+
		"$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001"+
		")\u0001)\u0001)\u0001)\u0001)\u0001)\u0001)\u0001)\u0001)\u0001)\u0003"+
		")\u00fe\b)\u0001*\u0001*\u0001*\u0001*\u0001*\u0001*\u0001*\u0001*\u0003"+
		"*\u0108\b*\u0001+\u0001+\u0001+\u0001+\u0005+\u010e\b+\n+\f+\u0111\t+"+
		"\u0001,\u0001,\u0003,\u0115\b,\u0001,\u0001,\u0001,\u0005,\u011a\b,\n"+
		",\f,\u011d\t,\u0001-\u0001-\u0001-\u0001-\u0005-\u0123\b-\n-\f-\u0126"+
		"\t-\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0005.\u012f\b.\n"+
		".\f.\u0132\t.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0003.\u013a\b"+
		".\u0001/\u0003/\u013d\b/\u0001/\u0001/\u00010\u00010\u00010\u00010\u0001"+
		"0\u00050\u0146\b0\n0\f0\u0149\t0\u00010\u00010\u00010\u00010\u00010\u0001"+
		"0\u00030\u0151\b0\u00011\u00011\u00011\u00011\u00011\u00012\u00012\u0001"+
		"2\u00012\u00052\u015c\b2\n2\f2\u015f\t2\u00012\u00032\u0162\b2\u00012"+
		"\u00012\u00013\u00043\u0167\b3\u000b3\f3\u0168\u00013\u00013\u00014\u0001"+
		"4\u00014\u0003\u0130\u0147\u015d\u00005\u0001\u0000\u0003\u0002\u0005"+
		"\u0000\u0007\u0000\t\u0000\u000b\u0003\r\u0004\u000f\u0005\u0011\u0006"+
		"\u0013\u0007\u0015\b\u0017\t\u0019\n\u001b\u000b\u001d\f\u001f\r!\u000e"+
		"#\u000f%\u0010\'\u0011)\u0012+\u0013-\u0014/\u00151\u00163\u00175\u0018"+
		"7\u00199\u001a;\u001b=\u001c?\u001dA\u001eC\u001fE G!I\"K#M$O%Q&S\'U("+
		"W)Y*[+],_\u0000a-c.e/g0i1\u0001\u0000\u0006\u0001\u000009\u0002\u0000"+
		"AZaz\u0001\u0000AZ\u0001\u0000az\u0001\u0001\n\n\u0003\u0000\t\n\f\r "+
		" \u0182\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000"+
		"\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000"+
		"]\u0001\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001"+
		"\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000g\u0001\u0000\u0000"+
		"\u0000\u0000i\u0001\u0000\u0000\u0000\u0001k\u0001\u0000\u0000\u0000\u0003"+
		"n\u0001\u0000\u0000\u0000\u0005r\u0001\u0000\u0000\u0000\u0007t\u0001"+
		"\u0000\u0000\u0000\tv\u0001\u0000\u0000\u0000\u000bx\u0001\u0000\u0000"+
		"\u0000\r~\u0001\u0000\u0000\u0000\u000f\u0083\u0001\u0000\u0000\u0000"+
		"\u0011\u0086\u0001\u0000\u0000\u0000\u0013\u0089\u0001\u0000\u0000\u0000"+
		"\u0015\u008c\u0001\u0000\u0000\u0000\u0017\u0095\u0001\u0000\u0000\u0000"+
		"\u0019\u009c\u0001\u0000\u0000\u0000\u001b\u00a0\u0001\u0000\u0000\u0000"+
		"\u001d\u00a5\u0001\u0000\u0000\u0000\u001f\u00aa\u0001\u0000\u0000\u0000"+
		"!\u00af\u0001\u0000\u0000\u0000#\u00b5\u0001\u0000\u0000\u0000%\u00ba"+
		"\u0001\u0000\u0000\u0000\'\u00bf\u0001\u0000\u0000\u0000)\u00c3\u0001"+
		"\u0000\u0000\u0000+\u00c6\u0001\u0000\u0000\u0000-\u00ca\u0001\u0000\u0000"+
		"\u0000/\u00cd\u0001\u0000\u0000\u00001\u00d0\u0001\u0000\u0000\u00003"+
		"\u00d3\u0001\u0000\u0000\u00005\u00d5\u0001\u0000\u0000\u00007\u00d7\u0001"+
		"\u0000\u0000\u00009\u00d9\u0001\u0000\u0000\u0000;\u00db\u0001\u0000\u0000"+
		"\u0000=\u00dd\u0001\u0000\u0000\u0000?\u00df\u0001\u0000\u0000\u0000A"+
		"\u00e1\u0001\u0000\u0000\u0000C\u00e3\u0001\u0000\u0000\u0000E\u00e5\u0001"+
		"\u0000\u0000\u0000G\u00e7\u0001\u0000\u0000\u0000I\u00e9\u0001\u0000\u0000"+
		"\u0000K\u00eb\u0001\u0000\u0000\u0000M\u00ed\u0001\u0000\u0000\u0000O"+
		"\u00ef\u0001\u0000\u0000\u0000Q\u00f1\u0001\u0000\u0000\u0000S\u00fd\u0001"+
		"\u0000\u0000\u0000U\u0107\u0001\u0000\u0000\u0000W\u0109\u0001\u0000\u0000"+
		"\u0000Y\u0114\u0001\u0000\u0000\u0000[\u011e\u0001\u0000\u0000\u0000]"+
		"\u0127\u0001\u0000\u0000\u0000_\u013c\u0001\u0000\u0000\u0000a\u0140\u0001"+
		"\u0000\u0000\u0000c\u0152\u0001\u0000\u0000\u0000e\u0157\u0001\u0000\u0000"+
		"\u0000g\u0166\u0001\u0000\u0000\u0000i\u016c\u0001\u0000\u0000\u0000k"+
		"l\u0007\u0000\u0000\u0000l\u0002\u0001\u0000\u0000\u0000mo\u0003\u0001"+
		"\u0000\u0000nm\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000pn\u0001"+
		"\u0000\u0000\u0000pq\u0001\u0000\u0000\u0000q\u0004\u0001\u0000\u0000"+
		"\u0000rs\u0007\u0001\u0000\u0000s\u0006\u0001\u0000\u0000\u0000tu\u0007"+
		"\u0002\u0000\u0000u\b\u0001\u0000\u0000\u0000vw\u0007\u0003\u0000\u0000"+
		"w\n\u0001\u0000\u0000\u0000xy\u0005c\u0000\u0000yz\u0005l\u0000\u0000"+
		"z{\u0005a\u0000\u0000{|\u0005s\u0000\u0000|}\u0005s\u0000\u0000}\f\u0001"+
		"\u0000\u0000\u0000~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005l\u0000"+
		"\u0000\u0080\u0081\u0005s\u0000\u0000\u0081\u0082\u0005e\u0000\u0000\u0082"+
		"\u000e\u0001\u0000\u0000\u0000\u0083\u0084\u0005f\u0000\u0000\u0084\u0085"+
		"\u0005i\u0000\u0000\u0085\u0010\u0001\u0000\u0000\u0000\u0086\u0087\u0005"+
		"i\u0000\u0000\u0087\u0088\u0005f\u0000\u0000\u0088\u0012\u0001\u0000\u0000"+
		"\u0000\u0089\u008a\u0005i\u0000\u0000\u008a\u008b\u0005n\u0000\u0000\u008b"+
		"\u0014\u0001\u0000\u0000\u0000\u008c\u008d\u0005i\u0000\u0000\u008d\u008e"+
		"\u0005n\u0000\u0000\u008e\u008f\u0005h\u0000\u0000\u008f\u0090\u0005e"+
		"\u0000\u0000\u0090\u0091\u0005r\u0000\u0000\u0091\u0092\u0005i\u0000\u0000"+
		"\u0092\u0093\u0005t\u0000\u0000\u0093\u0094\u0005s\u0000\u0000\u0094\u0016"+
		"\u0001\u0000\u0000\u0000\u0095\u0096\u0005i\u0000\u0000\u0096\u0097\u0005"+
		"s\u0000\u0000\u0097\u0098\u0005v\u0000\u0000\u0098\u0099\u0005o\u0000"+
		"\u0000\u0099\u009a\u0005i\u0000\u0000\u009a\u009b\u0005d\u0000\u0000\u009b"+
		"\u0018\u0001\u0000\u0000\u0000\u009c\u009d\u0005l\u0000\u0000\u009d\u009e"+
		"\u0005e\u0000\u0000\u009e\u009f\u0005t\u0000\u0000\u009f\u001a\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0005l\u0000\u0000\u00a1\u00a2\u0005o\u0000\u0000"+
		"\u00a2\u00a3\u0005o\u0000\u0000\u00a3\u00a4\u0005p\u0000\u0000\u00a4\u001c"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005p\u0000\u0000\u00a6\u00a7\u0005"+
		"o\u0000\u0000\u00a7\u00a8\u0005o\u0000\u0000\u00a8\u00a9\u0005l\u0000"+
		"\u0000\u00a9\u001e\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005t\u0000\u0000"+
		"\u00ab\u00ac\u0005h\u0000\u0000\u00ac\u00ad\u0005e\u0000\u0000\u00ad\u00ae"+
		"\u0005n\u0000\u0000\u00ae \u0001\u0000\u0000\u0000\u00af\u00b0\u0005w"+
		"\u0000\u0000\u00b0\u00b1\u0005h\u0000\u0000\u00b1\u00b2\u0005i\u0000\u0000"+
		"\u00b2\u00b3\u0005l\u0000\u0000\u00b3\u00b4\u0005e\u0000\u0000\u00b4\""+
		"\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005c\u0000\u0000\u00b6\u00b7\u0005"+
		"a\u0000\u0000\u00b7\u00b8\u0005s\u0000\u0000\u00b8\u00b9\u0005e\u0000"+
		"\u0000\u00b9$\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005e\u0000\u0000\u00bb"+
		"\u00bc\u0005s\u0000\u0000\u00bc\u00bd\u0005a\u0000\u0000\u00bd\u00be\u0005"+
		"c\u0000\u0000\u00be&\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005n\u0000"+
		"\u0000\u00c0\u00c1\u0005e\u0000\u0000\u00c1\u00c2\u0005w\u0000\u0000\u00c2"+
		"(\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005o\u0000\u0000\u00c4\u00c5\u0005"+
		"f\u0000\u0000\u00c5*\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005n\u0000"+
		"\u0000\u00c7\u00c8\u0005o\u0000\u0000\u00c8\u00c9\u0005t\u0000\u0000\u00c9"+
		",\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005=\u0000\u0000\u00cb\u00cc\u0005"+
		">\u0000\u0000\u00cc.\u0001\u0000\u0000\u0000\u00cd\u00ce\u0005<\u0000"+
		"\u0000\u00ce\u00cf\u0005-\u0000\u0000\u00cf0\u0001\u0000\u0000\u0000\u00d0"+
		"\u00d1\u0005<\u0000\u0000\u00d1\u00d2\u0005=\u0000\u0000\u00d22\u0001"+
		"\u0000\u0000\u0000\u00d3\u00d4\u0005<\u0000\u0000\u00d44\u0001\u0000\u0000"+
		"\u0000\u00d5\u00d6\u0005=\u0000\u0000\u00d66\u0001\u0000\u0000\u0000\u00d7"+
		"\u00d8\u0005+\u0000\u0000\u00d88\u0001\u0000\u0000\u0000\u00d9\u00da\u0005"+
		"-\u0000\u0000\u00da:\u0001\u0000\u0000\u0000\u00db\u00dc\u0005*\u0000"+
		"\u0000\u00dc<\u0001\u0000\u0000\u0000\u00dd\u00de\u0005/\u0000\u0000\u00de"+
		">\u0001\u0000\u0000\u0000\u00df\u00e0\u0005~\u0000\u0000\u00e0@\u0001"+
		"\u0000\u0000\u0000\u00e1\u00e2\u0005@\u0000\u0000\u00e2B\u0001\u0000\u0000"+
		"\u0000\u00e3\u00e4\u0005.\u0000\u0000\u00e4D\u0001\u0000\u0000\u0000\u00e5"+
		"\u00e6\u0005(\u0000\u0000\u00e6F\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005"+
		")\u0000\u0000\u00e8H\u0001\u0000\u0000\u0000\u00e9\u00ea\u0005{\u0000"+
		"\u0000\u00eaJ\u0001\u0000\u0000\u0000\u00eb\u00ec\u0005}\u0000\u0000\u00ec"+
		"L\u0001\u0000\u0000\u0000\u00ed\u00ee\u0005:\u0000\u0000\u00eeN\u0001"+
		"\u0000\u0000\u0000\u00ef\u00f0\u0005;\u0000\u0000\u00f0P\u0001\u0000\u0000"+
		"\u0000\u00f1\u00f2\u0005,\u0000\u0000\u00f2R\u0001\u0000\u0000\u0000\u00f3"+
		"\u00f4\u0005f\u0000\u0000\u00f4\u00f5\u0005a\u0000\u0000\u00f5\u00f6\u0005"+
		"l\u0000\u0000\u00f6\u00f7\u0005s\u0000\u0000\u00f7\u00fe\u0005e\u0000"+
		"\u0000\u00f8\u00f9\u0005F\u0000\u0000\u00f9\u00fa\u0005A\u0000\u0000\u00fa"+
		"\u00fb\u0005L\u0000\u0000\u00fb\u00fc\u0005S\u0000\u0000\u00fc\u00fe\u0005"+
		"E\u0000\u0000\u00fd\u00f3\u0001\u0000\u0000\u0000\u00fd\u00f8\u0001\u0000"+
		"\u0000\u0000\u00feT\u0001\u0000\u0000\u0000\u00ff\u0100\u0005t\u0000\u0000"+
		"\u0100\u0101\u0005r\u0000\u0000\u0101\u0102\u0005u\u0000\u0000\u0102\u0108"+
		"\u0005e\u0000\u0000\u0103\u0104\u0005T\u0000\u0000\u0104\u0105\u0005R"+
		"\u0000\u0000\u0105\u0106\u0005U\u0000\u0000\u0106\u0108\u0005E\u0000\u0000"+
		"\u0107\u00ff\u0001\u0000\u0000\u0000\u0107\u0103\u0001\u0000\u0000\u0000"+
		"\u0108V\u0001\u0000\u0000\u0000\u0109\u010f\u0003\u0007\u0003\u0000\u010a"+
		"\u010e\u0003\u0005\u0002\u0000\u010b\u010e\u0005_\u0000\u0000\u010c\u010e"+
		"\u0003\u0001\u0000\u0000\u010d\u010a\u0001\u0000\u0000\u0000\u010d\u010b"+
		"\u0001\u0000\u0000\u0000\u010d\u010c\u0001\u0000\u0000\u0000\u010e\u0111"+
		"\u0001\u0000\u0000\u0000\u010f\u010d\u0001\u0000\u0000\u0000\u010f\u0110"+
		"\u0001\u0000\u0000\u0000\u0110X\u0001\u0000\u0000\u0000\u0111\u010f\u0001"+
		"\u0000\u0000\u0000\u0112\u0115\u0003\u0005\u0002\u0000\u0113\u0115\u0005"+
		"_\u0000\u0000\u0114\u0112\u0001\u0000\u0000\u0000\u0114\u0113\u0001\u0000"+
		"\u0000\u0000\u0115\u011b\u0001\u0000\u0000\u0000\u0116\u011a\u0003\u0005"+
		"\u0002\u0000\u0117\u011a\u0005_\u0000\u0000\u0118\u011a\u0003\u0001\u0000"+
		"\u0000\u0119\u0116\u0001\u0000\u0000\u0000\u0119\u0117\u0001\u0000\u0000"+
		"\u0000\u0119\u0118\u0001\u0000\u0000\u0000\u011a\u011d\u0001\u0000\u0000"+
		"\u0000\u011b\u0119\u0001\u0000\u0000\u0000\u011b\u011c\u0001\u0000\u0000"+
		"\u0000\u011cZ\u0001\u0000\u0000\u0000\u011d\u011b\u0001\u0000\u0000\u0000"+
		"\u011e\u0124\u0003\t\u0004\u0000\u011f\u0123\u0003\u0005\u0002\u0000\u0120"+
		"\u0123\u0005_\u0000\u0000\u0121\u0123\u0003\u0001\u0000\u0000\u0122\u011f"+
		"\u0001\u0000\u0000\u0000\u0122\u0120\u0001\u0000\u0000\u0000\u0122\u0121"+
		"\u0001\u0000\u0000\u0000\u0123\u0126\u0001\u0000\u0000\u0000\u0124\u0122"+
		"\u0001\u0000\u0000\u0000\u0124\u0125\u0001\u0000\u0000\u0000\u0125\\\u0001"+
		"\u0000\u0000\u0000\u0126\u0124\u0001\u0000\u0000\u0000\u0127\u0130\u0005"+
		"\"\u0000\u0000\u0128\u0129\u0005\\\u0000\u0000\u0129\u012f\u0005\n\u0000"+
		"\u0000\u012a\u012f\u0005\\\u0000\u0000\u012b\u012c\u0005\u0000\u0000\u0000"+
		"\u012c\u012f\u0006.\u0000\u0000\u012d\u012f\t\u0000\u0000\u0000\u012e"+
		"\u0128\u0001\u0000\u0000\u0000\u012e\u012a\u0001\u0000\u0000\u0000\u012e"+
		"\u012b\u0001\u0000\u0000\u0000\u012e\u012d\u0001\u0000\u0000\u0000\u012f"+
		"\u0132\u0001\u0000\u0000\u0000\u0130\u0131\u0001\u0000\u0000\u0000\u0130"+
		"\u012e\u0001\u0000\u0000\u0000\u0131\u0139\u0001\u0000\u0000\u0000\u0132"+
		"\u0130\u0001\u0000\u0000\u0000\u0133\u0134\u0005\"\u0000\u0000\u0134\u013a"+
		"\u0006.\u0001\u0000\u0135\u0136\u0005\n\u0000\u0000\u0136\u013a\u0006"+
		".\u0002\u0000\u0137\u0138\u0005\u0000\u0000\u0001\u0138\u013a\u0006.\u0003"+
		"\u0000\u0139\u0133\u0001\u0000\u0000\u0000\u0139\u0135\u0001\u0000\u0000"+
		"\u0000\u0139\u0137\u0001\u0000\u0000\u0000\u013a^\u0001\u0000\u0000\u0000"+
		"\u013b\u013d\u0005\r\u0000\u0000\u013c\u013b\u0001\u0000\u0000\u0000\u013c"+
		"\u013d\u0001\u0000\u0000\u0000\u013d\u013e\u0001\u0000\u0000\u0000\u013e"+
		"\u013f\u0005\n\u0000\u0000\u013f`\u0001\u0000\u0000\u0000\u0140\u0141"+
		"\u0005(\u0000\u0000\u0141\u0142\u0005*\u0000\u0000\u0142\u0147\u0001\u0000"+
		"\u0000\u0000\u0143\u0146\u0003a0\u0000\u0144\u0146\t\u0000\u0000\u0000"+
		"\u0145\u0143\u0001\u0000\u0000\u0000\u0145\u0144\u0001\u0000\u0000\u0000"+
		"\u0146\u0149\u0001\u0000\u0000\u0000\u0147\u0148\u0001\u0000\u0000\u0000"+
		"\u0147\u0145\u0001\u0000\u0000\u0000\u0148\u0150\u0001\u0000\u0000\u0000"+
		"\u0149\u0147\u0001\u0000\u0000\u0000\u014a\u014b\u0005*\u0000\u0000\u014b"+
		"\u014c\u0005)\u0000\u0000\u014c\u014d\u0001\u0000\u0000\u0000\u014d\u0151"+
		"\u00060\u0004\u0000\u014e\u014f\u0005\u0000\u0000\u0001\u014f\u0151\u0006"+
		"0\u0005\u0000\u0150\u014a\u0001\u0000\u0000\u0000\u0150\u014e\u0001\u0000"+
		"\u0000\u0000\u0151b\u0001\u0000\u0000\u0000\u0152\u0153\u0005*\u0000\u0000"+
		"\u0153\u0154\u0005)\u0000\u0000\u0154\u0155\u0001\u0000\u0000\u0000\u0155"+
		"\u0156\u00061\u0006\u0000\u0156d\u0001\u0000\u0000\u0000\u0157\u0158\u0005"+
		"-\u0000\u0000\u0158\u0159\u0005-\u0000\u0000\u0159\u015d\u0001\u0000\u0000"+
		"\u0000\u015a\u015c\t\u0000\u0000\u0000\u015b\u015a\u0001\u0000\u0000\u0000"+
		"\u015c\u015f\u0001\u0000\u0000\u0000\u015d\u015e\u0001\u0000\u0000\u0000"+
		"\u015d\u015b\u0001\u0000\u0000\u0000\u015e\u0161\u0001\u0000\u0000\u0000"+
		"\u015f\u015d\u0001\u0000\u0000\u0000\u0160\u0162\u0007\u0004\u0000\u0000"+
		"\u0161\u0160\u0001\u0000\u0000\u0000\u0162\u0163\u0001\u0000\u0000\u0000"+
		"\u0163\u0164\u00062\u0007\u0000\u0164f\u0001\u0000\u0000\u0000\u0165\u0167"+
		"\u0007\u0005\u0000\u0000\u0166\u0165\u0001\u0000\u0000\u0000\u0167\u0168"+
		"\u0001\u0000\u0000\u0000\u0168\u0166\u0001\u0000\u0000\u0000\u0168\u0169"+
		"\u0001\u0000\u0000\u0000\u0169\u016a\u0001\u0000\u0000\u0000\u016a\u016b"+
		"\u00063\u0007\u0000\u016bh\u0001\u0000\u0000\u0000\u016c\u016d\t\u0000"+
		"\u0000\u0000\u016d\u016e\u00064\b\u0000\u016ej\u0001\u0000\u0000\u0000"+
		"\u0015\u0000p\u00fd\u0107\u010d\u010f\u0114\u0119\u011b\u0122\u0124\u012e"+
		"\u0130\u0139\u013c\u0145\u0147\u0150\u015d\u0161\u0168\t\u0001.\u0000"+
		"\u0001.\u0001\u0001.\u0002\u0001.\u0003\u00010\u0004\u00010\u0005\u0001"+
		"1\u0006\u0006\u0000\u0000\u00014\u0007";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}